{"version":3,"file":"babelPresetBoldr.cjs.js","sources":["../src/index.js"],"sourcesContent":["import path from 'path';\nimport envPreset, { isPluginRequired } from 'babel-preset-env';\nimport getTargets from 'babel-preset-env/lib/targets-parser';\nimport envPlugins from 'babel-preset-env/data/plugins.json';\nimport minifyPreset from 'babel-preset-minify';\nimport moduleResolver from 'babel-plugin-module-resolver';\nimport { get as getAppRoot } from 'app-root-dir';\nimport fastAsync from 'fast-async';\nimport browserslist from 'browserslist';\nimport transformClassProperties from 'babel-plugin-transform-class-properties';\nimport transformObjectRestSpread from 'babel-plugin-transform-object-rest-spread';\nimport transformFlowStripTypes from 'babel-plugin-transform-flow-strip-types';\nimport transformRuntimePlugin from 'babel-plugin-transform-runtime';\nimport transformReactJSX from 'babel-plugin-transform-react-jsx';\nimport transformReactDisplayName from 'babel-plugin-transform-react-display-name';\nimport transformReactJSXSource from 'babel-plugin-transform-react-jsx-source';\nimport transformReactJSXSelf from 'babel-plugin-transform-react-jsx-self';\nimport transformRemovePropTypes from 'babel-plugin-transform-react-remove-prop-types';\nimport transformReactInlineElements from 'babel-plugin-transform-react-inline-elements';\nimport transformReactConstantElements from 'babel-plugin-transform-react-constant-elements';\nimport transformDecoratorsLegacy from 'babel-plugin-transform-decorators-legacy';\nimport transformExportExtensions from 'babel-plugin-transform-export-extensions';\nimport syntaxDecorators from 'babel-plugin-syntax-decorators';\nimport syntaxFlow from 'babel-plugin-syntax-flow';\nimport syntaxJsx from 'babel-plugin-syntax-jsx';\nimport syntaxDynamicImport from 'babel-plugin-syntax-dynamic-import';\nimport dynamicImportNode from 'babel-plugin-dynamic-import-node';\nimport universalImport from 'babel-plugin-universal-import';\nimport styledComponents from 'babel-plugin-styled-components';\nimport lodashPlugin from 'babel-plugin-lodash';\n\nconst targetModern = {\n  node: '8.3.0',\n  browsers: [\n    'Safari >= 10.1',\n    'iOS >= 10.3',\n    'Edge >= 15',\n    'Chrome >= 59',\n    'ChromeAndroid >= 59',\n    'Firefox >= 53',\n  ],\n};\n\nconst defaults = {\n  // print explainations to console\n  verbose: false,\n\n  // Choose automatically depending on target or use one of these for full control:\n  // - \"commonjs\": Transpile module imports to commonjs\n  // - false: Keep module imports as is (e.g. protecting ESM for optiomal usage with Webpack)\n  // - \"auto\": Automatic selection based on target.\n  modules: 'auto',\n\n  // Prefer built-ins over custom code. This mainly benefits for modern engines.\n  useBuiltIns: true,\n  // Choose environment based on environment variables ... or override with custom value here.\n  env: 'auto',\n  // Whether to enable source map output\n  sourceMaps: true,\n  // One of the following:\n  // - \"node\"/nodejs\"/\"script\"/\"binary\": any NodeJS related execution with wide support to last LTS aka 6.9.0\n  // - \"node8\": identical to the previous option but target Node v8.0.0 (next LTS) - planned for October 2017\n  // - \"current\"/\"test\": current NodeJS version\n  // - \"browser\"/\"web\": browsers as defined by browserslist\n  // - \"library\": ideally used for publishing libraries e.g. on NPM\n  // - \"es2015\": same as \"library\" but targets es2o15 capable engines only.\n  // - \"modern\": same as \"library\" but targets modern engines only (slightly more forward-looking than es2015).\n  // - {}: any custom settings support by Env-Preset\n  target: 'nodejs',\n  // Enable full compression on production scripts or basic compression for libraries or during development.\n  compression: false,\n  // Keeping comments to be compatible with Webpack's magic comments\n  comments: true,\n  // Do not apply general minification by default\n  minified: false,\n  // Env Settings\n  looseMode: true,\n  specMode: false,\n  // Choose automatically depending on target by default or use one of these for full control:\n  // - \"rollup-nodejs\": For bundling with Rollup and later usage in NodeJS (e.g. produce binaries).\n  // - \"rollup-webpack\": For bundling with Rollup and later usage with Webpack (e.g. publish libraries).\n  // - \"webpack\": Improve compatibility with direct Webpack usage (add chunkNames, dynamic CSS imports, ...) (e.g. bundling applications)\n  // - \"auto\": Automatic selection based on target.\n  imports: 'auto',\n  srcDir: 'src',\n  // transform-runtime\n  // -- generators\n  regen: false,\n  // -- helpers\n  rtHelpers: true,\n  // -- require polyfill\n  polyfill: false,\n  // Async settings: Either `\"promises\"` or `null`\n  rewriteAsync: 'promises',\n  // fast async\n  // -- transpile using spec helpers -- no run time required, but slower.\n  // --- !!! MUST be false if nodentRt is true\n  faSpecMode: true,\n  // -- use nodent runtime for async/await - much faster than babel\n  nodentRt: false,\n  jsxPragma: 'React.createElement',\n\n  // Lodash Plugin Settings\n  lodashInc: ['lodash', 'async', 'ramda', 'recompose'],\n  styled: true,\n  styledProcess: false,\n};\n\nexport default function generatePreset(context, opts = {}) {\n  const presets = [];\n  const plugins = [];\n\n  // These are the final options we use later on.\n  const options = { ...defaults, ...opts };\n\n  // Reset environment value when configured as \"auto\"\n  if (opts.env === 'auto') {\n    opts.env = null;\n  }\n  const CURRENT_ENV = opts.env || process.env.BABEL_ENV || process.env.NODE_ENV || 'development';\n  const IS_PROD = /\\bproduction\\b/.test(CURRENT_ENV);\n\n  if (options.verbose) {\n    console.log(' ℹ️  Environment:', CURRENT_ENV);\n    console.log(' ℹ️  IS_PROD:', IS_PROD);\n  }\n  // Auto select test target when running in test environment and no other info is available.\n  if (CURRENT_ENV === 'test' && options.target == null) {\n    options.target = 'test';\n  }\n\n  let targetBinary =\n    options.target === 'node' ||\n    options.target === 'node8' ||\n    options.target === 'nodejs' ||\n    options.target === 'script' ||\n    options.target === 'binary';\n\n  let targetCurrent = options.target === 'current' || options.target === 'test';\n\n  let targetBrowserList = options.target === 'browser' || options.target === 'web';\n\n  let targetLibrary =\n    options.target === 'library' || options.target === 'es2015' || options.target === 'modern';\n\n  let targetCustom = typeof options.target === 'object';\n\n  let envTargets = {};\n\n  if (targetBinary) {\n    envTargets.node = options.target === 'node8' ? '8.3.0' : '6.11.1';\n  } else if (targetCurrent) {\n    // Scripts which are directly used like tests can be transpiled for the current NodeJS version\n    envTargets.node = 'current';\n  } else if (targetBrowserList) {\n    // Until this issue is fixed we can't use auto config detection for browserslist in babel-preset-env\n    // https://github.com/babel/babel-preset-env/issues/149\n    // This is currently scheduled for v2.0 of babel-preset-env which still has some tasks on the list.\n    // What we do here is actually pretty clever/stupid as we just use browserslist\n    // itself to query its configuration and pass over that data again to babel-preset-env\n    // for passing it to browserslist internally. Yeah.\n    const autoBrowsers = browserslist(null, { env: IS_PROD ? 'production' : 'development' });\n\n    // For the abstract browsers config we let browserslist find the config file\n    envTargets.browsers = autoBrowsers;\n  } else if (targetLibrary) {\n    if (options.target === 'modern') {\n      envTargets = targetModern;\n    } else {\n      // Explicit undefined results into compilation with \"latest\" preset supporting a wide range of clients via ES5 output\n      envTargets = undefined;\n    }\n  } else if (targetCustom) {\n    envTargets = options.target;\n  }\n  let additionalExcludes = [];\n\n  // Exclude all es2015 features which are supported by the default es2015 babel preset.\n  // This targets all es2015-capable browsers and engines.\n  if (options.target === 'es2015') {\n    additionalExcludes.push(\n      'transform-es2015-template-literals',\n      'transform-es2015-literals',\n      'transform-es2015-function-name',\n      'transform-es2015-arrow-functions',\n      'transform-es2015-block-scoped-functions',\n      'transform-es2015-classes',\n      'transform-es2015-object-super',\n      'transform-es2015-shorthand-properties',\n      'transform-es2015-duplicate-keys',\n      'transform-es2015-computed-properties',\n      'transform-es2015-for-of',\n      'transform-es2015-sticky-regex',\n      'transform-es2015-unicode-regex',\n      'check-es2015-constants',\n      'transform-es2015-spread',\n      'transform-es2015-parameters',\n      'transform-es2015-destructuring',\n      'transform-es2015-block-scoping',\n      'transform-es2015-typeof-symbol',\n      'transform-es2015-modules-commonjs',\n      'transform-es2015-modules-systemjs',\n      'transform-es2015-modules-amd',\n      'transform-es2015-modules-umd',\n    );\n  }\n\n  if (options.verbose) {\n    if (options.target === 'es2015') {\n      console.log('- Targeting es2015+ - Modern');\n    } else {\n      console.log('- Environment Targets:', envTargets);\n    }\n  }\n\n  if (options.modules == null || options.modules === 'auto') {\n    if (targetCurrent || targetBinary) {\n      options.modules = 'commonjs';\n    } else if (targetLibrary || targetBrowserList) {\n      // Libraries should be published as EcmaScript modules for tree shaking support\n      // For browser targets we typically use tools like Webpack which benefit from EcmaScript modules, too.\n      options.modules = false;\n    } else {\n      // Best overall support when nothing other is applicable\n      options.modules = 'commonjs';\n    }\n  }\n\n  // Automatic detection of \"imports\" mode based on target\n  if (options.imports == null || options.imports === 'auto') {\n    if (targetCurrent || targetBinary) {\n      options.imports = 'rollup-nodejs';\n    } else if (targetLibrary || targetCustom) {\n      options.imports = 'rollup-webpack';\n    } else if (targetBrowserList) {\n      options.imports = 'webpack';\n    } else {\n      options.imports = null;\n    }\n  }\n\n  // Automatic chunkNames require Webpack Magic Comments, we can't remove them.\n  if (options.imports === 'webpack') {\n    options.comments = true;\n  }\n  // Directly ask babel-preset-env whether we want to use transform-async\n  // based on currently configured targets. Only if that's the case we\n  // transform our async/await code. Otherwise we assume it works without\n  // any transpilation.\n  let requiresAsync = isPluginRequired(\n    getTargets(envTargets),\n    envPlugins['transform-async-to-generator'],\n  );\n  if (!requiresAsync) {\n    options.rewriteAsync = null;\n  }\n\n  if (options.verbose) {\n    /* eslint-disable no-nested-ternary */\n    console.log('- Module Settings:', options.modules === false ? 'ESM' : options.modules);\n    console.log(\n      '- Transpilation Compliance:',\n      options.specMode ? 'SPEC' : options.looseMode ? 'LOOSE' : 'DEFAULT',\n    );\n    console.log('- Async Transpilation:', options.rewriteAsync);\n  }\n\n  // Use basic compression for libraries and full compression on binaries\n  if (options.compression) {\n    if (IS_PROD && targetBinary) {\n      presets.push(minifyPreset);\n    } else {\n      // Apply some basic compression also for normal non-minified builds. After all\n      // it makes no sense to publish deadcode for example.\n      presets.push([\n        minifyPreset,\n        {\n          booleans: false,\n          infinity: false,\n          mangle: false,\n          flipComparisons: false,\n          replace: false,\n          simplify: false,\n        },\n      ]);\n    }\n  }\n  presets.push([\n    envPreset,\n    {\n      // Setting this to false will not transform modules.\n      modules: options.modules,\n\n      // Prefer built-ins which also prefers global polyfills which is the right thing to do\n      // for most scenarios like SPAs and NodeJS environments.\n      useBuiltIns: options.useBuiltIns,\n\n      // Options to tweak the details of the implementation. If both are `false` the environment\n      // preset is executed in default mode.\n      loose: options.looseMode,\n      spec: options.specMode,\n\n      // Debug output of features, plugins and presets which are enabled.\n      // debug: options.verbose,\n\n      // We prefer the transpilation of the \"fast-async\" plugin over the\n      // slower and more complex Babel internal implementation.\n      exclude: ['transform-regenerator', 'transform-async-to-generator', ...additionalExcludes],\n\n      // Differ between development and production for our scope.\n      // NodeJS is generally fine in development to match the runtime version which is currently installed.\n      targets: envTargets,\n    },\n  ]);\n  plugins.push(syntaxDynamicImport);\n  plugins.push(syntaxFlow);\n  plugins.push(syntaxJsx);\n  plugins.push(syntaxDecorators);\n  // Transpile the parsed import() syntax for compatibility or extended features.\n  if (options.imports === 'rollup-nodejs') {\n    if (options.verbose) {\n      console.log('- Import() rewritten using dynamic-import-node');\n    }\n\n    // Compiles import() to a deferred require() for NodeJS\n    plugins.push(dynamicImportNode);\n  } else if (options.imports === 'webpack') {\n    if (options.verbose) {\n      console.log('- Rewriting import() for Universal Webpack.');\n    }\n\n    // Dual CSS + JS imports together with automatic chunkNames and\n    // optimized non-chunked server-side rendering.\n    // https://github.com/airbnb/babel-plugin-dynamic-import-webpack\n    plugins.push(universalImport);\n  } else {\n    if (options.verbose) {\n      console.log('- Keeping import() statement as is.');\n    }\n  }\n\n  // Supports loading files in source folder without relative folders\n  // https://github.com/tleunen/babel-plugin-module-resolver\n  if (options.srcDir != null) {\n    plugins.push([\n      moduleResolver,\n      {\n        root: [path.resolve(getAppRoot(), options.srcDir)],\n        alias: {\n          '@': path.resolve(getAppRoot(), options.srcDir),\n        },\n      },\n    ]);\n  }\n  // Add displayName to createReactClass (and React.createClass) calls\n  plugins.push(transformReactDisplayName);\n  // FAST ASYNC\n  // -----------------------------------------------------------------------------\n  // --- Implements the ES7 keywords async and await using syntax transformation at compile-time, rather than generators.\n  // --- https://www.npmjs.com/package/fast-async\n  if (options.rewriteAsync) {\n    plugins.push([\n      fastAsync,\n      {\n        spec: options.faSpecMode,\n        useRuntimeModule: options.nodentRt,\n      },\n    ]);\n  }\n  plugins.push(transformDecoratorsLegacy);\n  // TRANSFORM CLASS PROPERTIES\n  // -----------------------------------------------------------------------------\n  // --- Support for ES7 Class Properties (currently stage-2)\n  // --- class { handleClick = () => { } }\n  plugins.push(transformClassProperties);\n  // TRANSFORM OBJECT REST SPREAD\n  // -----------------------------------------------------------------------------\n  // --- Support for Object Rest Spread `...` operator in objects.\n  plugins.push([\n    transformObjectRestSpread,\n    {\n      useBuiltIns: options.useBuiltIns,\n    },\n  ]);\n  // TRANSFORM EXPORT EXTENSIONS\n  // -----------------------------------------------------------------------------\n  // --- Allow export * from '...'\n  plugins.push(transformExportExtensions);\n  // TRANSFORM FLOW STRIP TYPES\n  // -----------------------------------------------------------------------------\n  // --- Remove flowtypes from the code\n  plugins.push(transformFlowStripTypes);\n  // TRANSFORM REACT JSX\n  // -----------------------------------------------------------------------------\n  // --- Use builtins\n  // --- specify pragma jic\n  plugins.push([\n    transformReactJSX,\n    {\n      useBuiltIns: options.useBuiltIns,\n      pragma: options.jsxPragma,\n    },\n  ]);\n  // TRANSFORM REACT JSX SOURCE & JSX SELF\n  // -----------------------------------------------------------------------------\n  // --- https://github.com/facebookincubator/create-react-app/issues/989\n  // --- Improve development verboseging experience with React\n  if (!IS_PROD) {\n    // Adds component stack to warning messages\n    plugins.push(transformReactJSXSource);\n\n    // Adds __self attribute to JSX which React will use for some warnings\n    plugins.push(transformReactJSXSelf);\n    if (options.styled) {\n      plugins.push([styledComponents, { displayName: true, ssr: true }]);\n    }\n  }\n  if (IS_PROD) {\n    // LODASH\n    // -----------------------------------------------------------------------------\n    // --- Optimization for cheery-picking from lodash, asyncjs, ramba and recompose.\n    // --- Auto cherry-picking es2015 imports from path imports.\n    // ---        @example:\n    // ---            import getIn from 'lodash/getIn';\n    // --- https://github.com/acdlite/recompose#using-babel-lodash-plugin\n    plugins.push([lodashPlugin, { id: options.lodashInc }]);\n    // Remove unnecessary React propTypes from the production build.\n    // https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types\n    plugins.push([\n      transformRemovePropTypes,\n      {\n        mode: 'remove',\n        removeImport: true,\n      },\n    ]);\n    // TRANSFORM REACT INLINE ELEMENTS:\n    // -----------------------------------------------------------------------------\n    // --- https://babeljs.io/docs/plugins/transform-react-inline-elements/\n    // --- Replaces the React.createElement function with one that is more optimized for production.\n    // --- NOTE: Symbol needs to be polyfilled.\n    plugins.push(transformReactInlineElements);\n\n    // TRANSFORM REACT CONSTANT ELEMENTS:\n    // -----------------------------------------------------------------------------\n    // --- https://babeljs.io/docs/plugins/transform-react-constant-elements/\n    plugins.push(transformReactConstantElements);\n    if (options.styled) {\n      plugins.push([styledComponents, { ssr: true }]);\n    }\n  }\n  // TRANSFORM RUNTIME:\n  // -----------------------------------------------------------------------------\n  // Use helpers, but not polyfills, in a way that omits duplication.\n  // For polyfills better use polyfill.io or another more sophisticated solution.\n  plugins.push([\n    transformRuntimePlugin,\n    {\n      useESModules: options.modules === false,\n      helpers: options.rtHelpers,\n      regenerator: options.regen,\n      polyfill: options.polyfill,\n      useBuiltIns: options.useBuiltIns,\n    },\n  ]);\n  return {\n    // Babel basic configuration\n    comments: options.comments,\n    compact: true,\n    minified: options.minified,\n\n    // Whether to enable source maps\n    sourceMaps: options.sourceMaps,\n\n    // And all the previously built lists of presets and plugins\n    presets,\n    plugins,\n  };\n}\n"],"names":["node","browsers","verbose","modules","useBuiltIns","env","sourceMaps","target","compression","comments","minified","looseMode","specMode","imports","srcDir","regen","rtHelpers","polyfill","rewriteAsync","faSpecMode","nodentRt","jsxPragma","lodashInc","styled","styledProcess","context","opts","defaults","process","BABEL_ENV","NODE_ENV","test","CURRENT_ENV","options","console","log","IS_PROD","targetBinary","envTargets","targetCurrent","targetBrowserList","browserslist","autoBrowsers","targetLibrary","targetModern","undefined","targetCustom","additionalExcludes","push","isPluginRequired","getTargets","envPlugins","requiresAsync","presets","minifyPreset","booleans","infinity","mangle","flipComparisons","replace","simplify","envPreset","loose","spec","exclude","targets","plugins","syntaxDynamicImport","syntaxFlow","syntaxJsx","syntaxDecorators","dynamicImportNode","universalImport","moduleResolver","root","path","resolve","getAppRoot","alias","transformReactDisplayName","fastAsync","useRuntimeModule","transformDecoratorsLegacy","transformClassProperties","transformObjectRestSpread","transformExportExtensions","transformFlowStripTypes","transformReactJSX","pragma","transformReactJSXSource","transformReactJSXSelf","styledComponents","displayName","ssr","lodashPlugin","id","transformRemovePropTypes","mode","removeImport","transformReactInlineElements","transformReactConstantElements","transformRuntimePlugin","useESModules","helpers","regenerator","compact"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,mBAAqB,CACnBA,KAAM,OADa,CAEnBC,SAAU,CACR,gBADQ,CAER,aAFQ,CAGR,YAHQ,CAIR,cAJQ,CAKR,qBALQ,CAMR,eANQ,CAFS,CAArB,CAYA,eAAiB,CAEfC,QAAS,KAFM,CAQfC,QAAS,MARM,CAWfC,YAAa,IAXE,CAafC,IAAK,MAbU,CAefC,WAAY,IAfG,CAyBfC,OAAQ,QAzBO,CA2BfC,YAAa,KA3BE,CA6BfC,SAAU,IA7BK,CA+BfC,SAAU,KA/BK,CAiCfC,UAAW,IAjCI,CAkCfC,SAAU,KAlCK,CAwCfC,QAAS,MAxCM,CAyCfC,OAAQ,KAzCO,CA4CfC,MAAO,KA5CQ,CA8CfC,UAAW,IA9CI,CAgDfC,SAAU,KAhDK,CAkDfC,aAAc,UAlDC,CAsDfC,WAAY,IAtDG,CAwDfC,SAAU,KAxDK,CAyDfC,UAAW,qBAzDI,CA4DfC,UAAW,CAAC,QAAD,CAAW,OAAX,CAAoB,OAApB,CAA6B,WAA7B,CA5DI,CA6DfC,OAAQ,IA7DO,CA8DfC,cAAe,KA9DA,CAAjB,wBAiEe,CAAwBC,OAAxB,CAAiCC,KAAO,EAAxC,CAA4C,CACzD,cAAgB,EAAhB,CACA,cAAgB,EAAhB,CAGA,+BAAqBC,QAAf,CAA4BD,IAA5B,CAAN,CAGA,GAAIA,KAAKrB,GAAL,GAAa,MAAjB,CAAyB,CACvBqB,KAAKrB,GAAL,CAAW,KACZ,CACD,kBAAoBqB,KAAKrB,GAAL,EAAYuB,QAAQvB,GAAR,CAAYwB,SAAxB,EAAqCD,QAAQvB,GAAR,CAAYyB,QAAjD,EAA6D,aAAjF,CACA,cAAgB,iBAAiBC,IAAjB,CAAsBC,WAAtB,CAAhB,CAEA,GAAIC,QAAQ/B,OAAZ,CAAqB,CACnBgC,QAAQC,GAAR,CAAY,6BAAZ,CAAiCH,WAAjC,EACAE,QAAQC,GAAR,CAAY,yBAAZ,CAA6BC,OAA7B,EACD,CAED,GAAIJ,cAAgB,MAAhB,EAA0BC,QAAQ1B,MAAR,EAAkB,IAAhD,CAAsD,CACpD0B,QAAQ1B,MAAR,CAAiB,OAClB,CAED,iBACE0B,QAAQ1B,MAAR,GAAmB,MAAnB,EACA0B,QAAQ1B,MAAR,GAAmB,OADnB,EAEA0B,QAAQ1B,MAAR,GAAmB,QAFnB,EAGA0B,QAAQ1B,MAAR,GAAmB,QAHnB,EAIA0B,QAAQ1B,MAAR,GAAmB,QALrB,CAOA,kBAAoB0B,QAAQ1B,MAAR,GAAmB,SAAnB,EAAgC0B,QAAQ1B,MAAR,GAAmB,MAAvE,CAEA,sBAAwB0B,QAAQ1B,MAAR,GAAmB,SAAnB,EAAgC0B,QAAQ1B,MAAR,GAAmB,KAA3E,CAEA,kBACE0B,QAAQ1B,MAAR,GAAmB,SAAnB,EAAgC0B,QAAQ1B,MAAR,GAAmB,QAAnD,EAA+D0B,QAAQ1B,MAAR,GAAmB,QADpF,CAGA,iBAAmB,eAAeA,MAAf,GAA0B,QAA7C,CAEA,eAAiB,EAAjB,CAEA,GAAI8B,YAAJ,CAAkB,CAChBC,WAAWtC,IAAX,CAAkBiC,QAAQ1B,MAAR,GAAmB,OAAnB,CAA6B,OAA7B,CAAuC,SAC1D,CAFD,QAEWgC,aAAJ,CAAmB,CAExBD,WAAWtC,IAAX,CAAkB,UACnB,CAHM,QAGIwC,iBAAJ,CAAuB,CAO5B,mBAAqBC,aAAa,IAAb,CAAmB,CAAEpC,IAAK+B,QAAU,YAAV,CAAyB,aAAhC,CAAnB,CAArB,CAGAE,WAAWrC,QAAX,CAAsByC,aACvB,CAXM,QAWIC,aAAJ,CAAmB,CACxB,GAAIV,QAAQ1B,MAAR,GAAmB,QAAvB,CAAiC,CAC/B+B,WAAaM,aACd,CAFD,IAEO,CAELN,WAAaO,UACd,CACF,CAPM,QAOIC,YAAJ,CAAkB,CACvBR,WAAaL,QAAQ1B,OACtB,CACD,uBAAyB,EAAzB,CAIA,GAAI0B,QAAQ1B,MAAR,GAAmB,QAAvB,CAAiC,CAC/BwC,mBAAmBC,IAAnB,CACE,oCADF,CAEE,2BAFF,CAGE,gCAHF,CAIE,kCAJF,CAKE,yCALF,CAME,0BANF,CAOE,+BAPF,CAQE,uCARF,CASE,iCATF,CAUE,sCAVF,CAWE,yBAXF,CAYE,+BAZF,CAaE,gCAbF,CAcE,wBAdF,CAeE,yBAfF,CAgBE,6BAhBF,CAiBE,gCAjBF,CAkBE,gCAlBF,CAmBE,gCAnBF,CAoBE,mCApBF,CAqBE,mCArBF,CAsBE,8BAtBF,CAuBE,8BAvBF,EAyBD,CAED,GAAIf,QAAQ/B,OAAZ,CAAqB,CACnB,GAAI+B,QAAQ1B,MAAR,GAAmB,QAAvB,CAAiC,CAC/B2B,QAAQC,GAAR,CAAY,8BAAZ,EACD,CAFD,IAEO,CACLD,QAAQC,GAAR,CAAY,wBAAZ,CAAsCG,UAAtC,EACD,CACF,CAED,GAAIL,QAAQ9B,OAAR,EAAmB,IAAnB,EAA2B8B,QAAQ9B,OAAR,GAAoB,MAAnD,CAA2D,CACzD,GAAIoC,eAAiBF,YAArB,CAAmC,CACjCJ,QAAQ9B,OAAR,CAAkB,WACnB,CAFD,QAEWwC,eAAiBH,iBAArB,CAAwC,CAG7CP,QAAQ9B,OAAR,CAAkB,MACnB,CAJM,IAIA,CAEL8B,QAAQ9B,OAAR,CAAkB,WACnB,CACF,CAGD,GAAI8B,QAAQpB,OAAR,EAAmB,IAAnB,EAA2BoB,QAAQpB,OAAR,GAAoB,MAAnD,CAA2D,CACzD,GAAI0B,eAAiBF,YAArB,CAAmC,CACjCJ,QAAQpB,OAAR,CAAkB,gBACnB,CAFD,QAEW8B,eAAiBG,YAArB,CAAmC,CACxCb,QAAQpB,OAAR,CAAkB,iBACnB,CAFM,QAEI2B,iBAAJ,CAAuB,CAC5BP,QAAQpB,OAAR,CAAkB,UACnB,CAFM,IAEA,CACLoB,QAAQpB,OAAR,CAAkB,KACnB,CACF,CAGD,GAAIoB,QAAQpB,OAAR,GAAoB,SAAxB,CAAmC,CACjCoB,QAAQxB,QAAR,CAAmB,KACpB,CAKD,kBAAoBwC,2BAClBC,WAAWZ,UAAX,CADkB,CAElBa,WAAW,8BAAX,CAFkB,CAApB,CAIA,GAAI,CAACC,aAAL,CAAoB,CAClBnB,QAAQf,YAAR,CAAuB,KACxB,CAED,GAAIe,QAAQ/B,OAAZ,CAAqB,CAEnBgC,QAAQC,GAAR,CAAY,oBAAZ,CAAkCF,QAAQ9B,OAAR,GAAoB,KAApB,CAA4B,KAA5B,CAAoC8B,QAAQ9B,OAA9E,EACA+B,QAAQC,GAAR,CACE,6BADF,CAEEF,QAAQrB,QAAR,CAAmB,MAAnB,CAA4BqB,QAAQtB,SAAR,CAAoB,OAApB,CAA8B,SAF5D,EAIAuB,QAAQC,GAAR,CAAY,wBAAZ,CAAsCF,QAAQf,YAA9C,EACD,CAGD,GAAIe,QAAQzB,WAAZ,CAAyB,CACvB,GAAI4B,SAAWC,YAAf,CAA6B,CAC3BgB,QAAQL,IAAR,CAAaM,YAAb,EACD,CAFD,IAEO,CAGLD,QAAQL,IAAR,CAAa,CACXM,YADW,CAEX,CACEC,SAAU,KADZ,CAEEC,SAAU,KAFZ,CAGEC,OAAQ,KAHV,CAIEC,gBAAiB,KAJnB,CAKEC,QAAS,KALX,CAMEC,SAAU,KANZ,CAFW,CAAb,EAWD,CACF,CACDP,QAAQL,IAAR,CAAa,CACXa,kBADW,CAEX,CAEE1D,QAAS8B,QAAQ9B,OAFnB,CAMEC,YAAa6B,QAAQ7B,WANvB,CAUE0D,MAAO7B,QAAQtB,SAVjB,CAWEoD,KAAM9B,QAAQrB,QAXhB,CAkBEoD,QAAS,CAAC,uBAAD,CAA0B,8BAA1B,CAA0D,GAAGjB,kBAA7D,CAlBX,CAsBEkB,QAAS3B,UAtBX,CAFW,CAAb,EA2BA4B,QAAQlB,IAAR,CAAamB,mBAAb,EACAD,QAAQlB,IAAR,CAAaoB,UAAb,EACAF,QAAQlB,IAAR,CAAaqB,SAAb,EACAH,QAAQlB,IAAR,CAAasB,gBAAb,EAEA,GAAIrC,QAAQpB,OAAR,GAAoB,eAAxB,CAAyC,CACvC,GAAIoB,QAAQ/B,OAAZ,CAAqB,CACnBgC,QAAQC,GAAR,CAAY,gDAAZ,EACD,CAGD+B,QAAQlB,IAAR,CAAauB,iBAAb,EACD,CAPD,QAOWtC,QAAQpB,OAAR,GAAoB,SAAxB,CAAmC,CACxC,GAAIoB,QAAQ/B,OAAZ,CAAqB,CACnBgC,QAAQC,GAAR,CAAY,6CAAZ,EACD,CAKD+B,QAAQlB,IAAR,CAAawB,eAAb,EACD,CATM,IASA,CACL,GAAIvC,QAAQ/B,OAAZ,CAAqB,CACnBgC,QAAQC,GAAR,CAAY,qCAAZ,EACD,CACF,CAID,GAAIF,QAAQnB,MAAR,EAAkB,IAAtB,CAA4B,CAC1BoD,QAAQlB,IAAR,CAAa,CACXyB,cADW,CAEX,CACEC,KAAM,CAACC,KAAKC,OAAL,CAAaC,gBAAb,CAA2B5C,QAAQnB,MAAnC,CAAD,CADR,CAEEgE,MAAO,CACL,IAAKH,KAAKC,OAAL,CAAaC,gBAAb,CAA2B5C,QAAQnB,MAAnC,CADA,CAFT,CAFW,CAAb,EASD,CAEDoD,QAAQlB,IAAR,CAAa+B,yBAAb,EAKA,GAAI9C,QAAQf,YAAZ,CAA0B,CACxBgD,QAAQlB,IAAR,CAAa,CACXgC,SADW,CAEX,CACEjB,KAAM9B,QAAQd,UADhB,CAEE8D,iBAAkBhD,QAAQb,QAF5B,CAFW,CAAb,EAOD,CACD8C,QAAQlB,IAAR,CAAakC,yBAAb,EAKAhB,QAAQlB,IAAR,CAAamC,wBAAb,EAIAjB,QAAQlB,IAAR,CAAa,CACXoC,yBADW,CAEX,CACEhF,YAAa6B,QAAQ7B,WADvB,CAFW,CAAb,EASA8D,QAAQlB,IAAR,CAAaqC,yBAAb,EAIAnB,QAAQlB,IAAR,CAAasC,uBAAb,EAKApB,QAAQlB,IAAR,CAAa,CACXuC,iBADW,CAEX,CACEnF,YAAa6B,QAAQ7B,WADvB,CAEEoF,OAAQvD,QAAQZ,SAFlB,CAFW,CAAb,EAWA,GAAI,CAACe,OAAL,CAAc,CAEZ8B,QAAQlB,IAAR,CAAayC,uBAAb,EAGAvB,QAAQlB,IAAR,CAAa0C,qBAAb,EACA,GAAIzD,QAAQV,MAAZ,CAAoB,CAClB2C,QAAQlB,IAAR,CAAa,CAAC2C,gBAAD,CAAmB,CAAEC,YAAa,IAAf,CAAqBC,IAAK,IAA1B,CAAnB,CAAb,EACD,CACF,CACD,GAAIzD,OAAJ,CAAa,CAQX8B,QAAQlB,IAAR,CAAa,CAAC8C,YAAD,CAAe,CAAEC,GAAI9D,QAAQX,SAAd,CAAf,CAAb,EAGA4C,QAAQlB,IAAR,CAAa,CACXgD,wBADW,CAEX,CACEC,KAAM,QADR,CAEEC,aAAc,IAFhB,CAFW,CAAb,EAYAhC,QAAQlB,IAAR,CAAamD,4BAAb,EAKAjC,QAAQlB,IAAR,CAAaoD,8BAAb,EACA,GAAInE,QAAQV,MAAZ,CAAoB,CAClB2C,QAAQlB,IAAR,CAAa,CAAC2C,gBAAD,CAAmB,CAAEE,IAAK,IAAP,CAAnB,CAAb,EACD,CACF,CAKD3B,QAAQlB,IAAR,CAAa,CACXqD,sBADW,CAEX,CACEC,aAAcrE,QAAQ9B,OAAR,GAAoB,KADpC,CAEEoG,QAAStE,QAAQjB,SAFnB,CAGEwF,YAAavE,QAAQlB,KAHvB,CAIEE,SAAUgB,QAAQhB,QAJpB,CAKEb,YAAa6B,QAAQ7B,WALvB,CAFW,CAAb,EAUA,MAAO,CAELK,SAAUwB,QAAQxB,QAFb,CAGLgG,QAAS,IAHJ,CAIL/F,SAAUuB,QAAQvB,QAJb,CAOLJ,WAAY2B,QAAQ3B,UAPf,CAUL+C,OAVK,CAWLa,OAXK,CAaR;;;;"}