'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var path = _interopDefault(require('path'));
var envPreset = require('babel-preset-env');
var envPreset__default = _interopDefault(envPreset);
var getTargets = _interopDefault(require('babel-preset-env/lib/targets-parser'));
var envPlugins = _interopDefault(require('babel-preset-env/data/plugins.json'));
var minifyPreset = _interopDefault(require('babel-preset-minify'));
var moduleResolver = _interopDefault(require('babel-plugin-module-resolver'));
var appRootDir = require('app-root-dir');
var fastAsync = _interopDefault(require('fast-async'));
var browserslist = _interopDefault(require('browserslist'));
var transformClassProperties = _interopDefault(require('babel-plugin-transform-class-properties'));
var transformObjectRestSpread = _interopDefault(require('babel-plugin-transform-object-rest-spread'));
var transformFlowStripTypes = _interopDefault(require('babel-plugin-transform-flow-strip-types'));
var transformRuntimePlugin = _interopDefault(require('babel-plugin-transform-runtime'));
var transformReactJSX = _interopDefault(require('babel-plugin-transform-react-jsx'));
var transformReactDisplayName = _interopDefault(require('babel-plugin-transform-react-display-name'));
var transformReactJSXSource = _interopDefault(require('babel-plugin-transform-react-jsx-source'));
var transformReactJSXSelf = _interopDefault(require('babel-plugin-transform-react-jsx-self'));
var transformRemovePropTypes = _interopDefault(require('babel-plugin-transform-react-remove-prop-types'));
var transformReactInlineElements = _interopDefault(require('babel-plugin-transform-react-inline-elements'));
var transformReactConstantElements = _interopDefault(require('babel-plugin-transform-react-constant-elements'));
var transformDecoratorsLegacy = _interopDefault(require('babel-plugin-transform-decorators-legacy'));
var transformExportExtensions = _interopDefault(require('babel-plugin-transform-export-extensions'));
var syntaxDecorators = _interopDefault(require('babel-plugin-syntax-decorators'));
var syntaxFlow = _interopDefault(require('babel-plugin-syntax-flow'));
var syntaxJsx = _interopDefault(require('babel-plugin-syntax-jsx'));
var syntaxDynamicImport = _interopDefault(require('babel-plugin-syntax-dynamic-import'));
var dynamicImportNode = _interopDefault(require('babel-plugin-dynamic-import-node'));
var universalImport = _interopDefault(require('babel-plugin-universal-import'));
var styledComponents = _interopDefault(require('babel-plugin-styled-components'));
var lodashPlugin = _interopDefault(require('babel-plugin-lodash'));

const targetModern={node:'8.3.0',browsers:['Safari >= 10.1','iOS >= 10.3','Edge >= 15','Chrome >= 59','ChromeAndroid >= 59','Firefox >= 53']};const defaults={verbose:false,modules:'auto',useBuiltIns:true,env:'auto',sourceMaps:true,target:'nodejs',compression:false,comments:true,minified:false,looseMode:true,specMode:false,imports:'auto',srcDir:'src',regen:false,rtHelpers:true,polyfill:false,rewriteAsync:'promises',faSpecMode:true,nodentRt:false,jsxPragma:'React.createElement',lodashInc:['lodash','async','ramda','recompose'],styled:true,styledProcess:false};function generatePreset(context,opts={}){const presets=[];const plugins=[];const options=Object.assign({},defaults,opts);if(opts.env==='auto'){opts.env=null;}const CURRENT_ENV=opts.env||process.env.BABEL_ENV||process.env.NODE_ENV||'development';const IS_PROD=/\bproduction\b/.test(CURRENT_ENV);if(options.verbose){console.log(' \u2139\uFE0F  Environment:',CURRENT_ENV);console.log(' \u2139\uFE0F  IS_PROD:',IS_PROD);}if(CURRENT_ENV==='test'&&options.target==null){options.target='test';}let targetBinary=options.target==='node'||options.target==='node8'||options.target==='nodejs'||options.target==='script'||options.target==='binary';let targetCurrent=options.target==='current'||options.target==='test';let targetBrowserList=options.target==='browser'||options.target==='web';let targetLibrary=options.target==='library'||options.target==='es2015'||options.target==='modern';let targetCustom=typeof options.target==='object';let envTargets={};if(targetBinary){envTargets.node=options.target==='node8'?'8.3.0':'6.11.1';}else if(targetCurrent){envTargets.node='current';}else if(targetBrowserList){const autoBrowsers=browserslist(null,{env:IS_PROD?'production':'development'});envTargets.browsers=autoBrowsers;}else if(targetLibrary){if(options.target==='modern'){envTargets=targetModern;}else{envTargets=undefined;}}else if(targetCustom){envTargets=options.target;}let additionalExcludes=[];if(options.target==='es2015'){additionalExcludes.push('transform-es2015-template-literals','transform-es2015-literals','transform-es2015-function-name','transform-es2015-arrow-functions','transform-es2015-block-scoped-functions','transform-es2015-classes','transform-es2015-object-super','transform-es2015-shorthand-properties','transform-es2015-duplicate-keys','transform-es2015-computed-properties','transform-es2015-for-of','transform-es2015-sticky-regex','transform-es2015-unicode-regex','check-es2015-constants','transform-es2015-spread','transform-es2015-parameters','transform-es2015-destructuring','transform-es2015-block-scoping','transform-es2015-typeof-symbol','transform-es2015-modules-commonjs','transform-es2015-modules-systemjs','transform-es2015-modules-amd','transform-es2015-modules-umd');}if(options.verbose){if(options.target==='es2015'){console.log('- Targeting es2015+ - Modern');}else{console.log('- Environment Targets:',envTargets);}}if(options.modules==null||options.modules==='auto'){if(targetCurrent||targetBinary){options.modules='commonjs';}else if(targetLibrary||targetBrowserList){options.modules=false;}else{options.modules='commonjs';}}if(options.imports==null||options.imports==='auto'){if(targetCurrent||targetBinary){options.imports='rollup-nodejs';}else if(targetLibrary||targetCustom){options.imports='rollup-webpack';}else if(targetBrowserList){options.imports='webpack';}else{options.imports=null;}}if(options.imports==='webpack'){options.comments=true;}let requiresAsync=envPreset.isPluginRequired(getTargets(envTargets),envPlugins['transform-async-to-generator']);if(!requiresAsync){options.rewriteAsync=null;}if(options.verbose){console.log('- Module Settings:',options.modules===false?'ESM':options.modules);console.log('- Transpilation Compliance:',options.specMode?'SPEC':options.looseMode?'LOOSE':'DEFAULT');console.log('- Async Transpilation:',options.rewriteAsync);}if(options.compression){if(IS_PROD&&targetBinary){presets.push(minifyPreset);}else{presets.push([minifyPreset,{booleans:false,infinity:false,mangle:false,flipComparisons:false,replace:false,simplify:false}]);}}presets.push([envPreset__default,{modules:options.modules,useBuiltIns:options.useBuiltIns,loose:options.looseMode,spec:options.specMode,exclude:['transform-regenerator','transform-async-to-generator',...additionalExcludes],targets:envTargets}]);plugins.push(syntaxDynamicImport);plugins.push(syntaxFlow);plugins.push(syntaxJsx);plugins.push(syntaxDecorators);if(options.imports==='rollup-nodejs'){if(options.verbose){console.log('- Import() rewritten using dynamic-import-node');}plugins.push(dynamicImportNode);}else if(options.imports==='webpack'){if(options.verbose){console.log('- Rewriting import() for Universal Webpack.');}plugins.push(universalImport);}else{if(options.verbose){console.log('- Keeping import() statement as is.');}}if(options.srcDir!=null){plugins.push([moduleResolver,{root:[path.resolve(appRootDir.get(),options.srcDir)],alias:{'@':path.resolve(appRootDir.get(),options.srcDir)}}]);}plugins.push(transformReactDisplayName);if(options.rewriteAsync){plugins.push([fastAsync,{spec:options.faSpecMode,useRuntimeModule:options.nodentRt}]);}plugins.push(transformDecoratorsLegacy);plugins.push(transformClassProperties);plugins.push([transformObjectRestSpread,{useBuiltIns:options.useBuiltIns}]);plugins.push(transformExportExtensions);plugins.push(transformFlowStripTypes);plugins.push([transformReactJSX,{useBuiltIns:options.useBuiltIns,pragma:options.jsxPragma}]);if(!IS_PROD){plugins.push(transformReactJSXSource);plugins.push(transformReactJSXSelf);if(options.styled){plugins.push([styledComponents,{displayName:true,ssr:true}]);}}if(IS_PROD){plugins.push([lodashPlugin,{id:options.lodashInc}]);plugins.push([transformRemovePropTypes,{mode:'remove',removeImport:true}]);plugins.push(transformReactInlineElements);plugins.push(transformReactConstantElements);if(options.styled){plugins.push([styledComponents,{ssr:true}]);}}plugins.push([transformRuntimePlugin,{useESModules:options.modules===false,helpers:options.rtHelpers,regenerator:options.regen,polyfill:options.polyfill,useBuiltIns:options.useBuiltIns}]);return{comments:options.comments,compact:true,minified:options.minified,sourceMaps:options.sourceMaps,presets,plugins}}

module.exports = generatePreset;
//# sourceMappingURL=babelPresetBoldr.cjs.js.map
